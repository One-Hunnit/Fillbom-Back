name: Auto deploy to NCP

on:
  push:
    branches: [ "develope" ]
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set YML
        run: |
          echo ${{ secrets.APPLICATION_YML }} | base64 --decode > ./src/main/resources/application.yml

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: clean build -x test

      - name: Docker build & push to Docker repo
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          echo "docker 로그인 성공"
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fillbom .
          echo "docker 빌드 성공"
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fillbom

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: NCP login and docker image pull and run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            echo "docker 로그인 성공"
            sudo docker stop $(sudo docker ps -aq)
            echo "현재 실행 중인 모든 Docker 컨테이너 중지"
            sudo docker rm -f $(sudo docker ps -qa)
            echo "모든 Docker 컨테이너 강제로 삭제"
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fillbom
            echo "docker pull 성공"
            sudo docker run -d -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/fillbom
            sudo docker image prune -f
            echo "사용하지 않는 Docker image 정리"
